import jp.progression.commands.proto.Command;import jp.progression.events.Event;import jp.progression.events.EventUnit;import jp.progression.events.TweenEvent;import spark.display.DisplayObject;import mx.effects.Tween;import mx.utils.Delegate;/** *  * Progression for ActionScript 2.0 *  * @author	Copyright (c) 2007 Mk-10:cellfusion.jp, supported by Spark project. * @version	1.0.0 Alpha *  * @see		http://progression.jp/ * @see		http://usage.progression.jp/ * @see		http://progression.libspark.org/ *  * @see		http://cellfusion.jp/ * @see		http://www.libspark.org/ *  * Licensed under the Apache License, Version 2.0 (the "License"); * you may not use this file except in compliance with the License. * You may obtain a copy of the License at *  * http://www.apache.org/licenses/LICENSE-2.0 *  * Unless required by applicable law or agreed to in writing, software * distributed under the License is distributed on an "AS IS" BASIS, * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, * either express or implied. See the License for the specific language * governing permissions and limitations under the License. *  */class jp.progression.commands.DoTween extends Command {		public function get target():Object { return _target; }	public function set target(value:Object):Void { _target = value; }	private var _target:Object;		public function get props():Object { return _props; }	public function set props(value:Object):Void { _props = value; }	private var _props:Object;		public function get easing():Function { return _easing; }	public function set easing(value:Function):Void { _easing = value; }	private var _easing:Function;		public function get duration():Number { return _duration; }	public function set duration(value:Number):Void { _duration = value; }	private var _duration:Number;		private var _tweens:Array;		private var _eventUnit:EventUnit;		private var _completeDelegate:Function;		public function DoTween(target:Object, props:Object, easing:Function, duration:Number, delay:Number) {		super("DoTween", delay);				this.target = target instanceof DisplayObject ? target["displayObject"] : target;		this.props = props;		this.easing = easing;		this.duration = duration;				_completeDelegate = Delegate.create(this, completeHandler);	}		public function _executeProgress():Void	{//		if (!(target instanceof Object && props instanceof Object && easing instanceof Function))//		{//			_executeComplete();//			return;//		}				_tweens = [];		_eventUnit = new EventUnit();		_eventUnit.addEventListener(Event.COMPLETE, _completeDelegate);				for (var s:String in props)		{			var tween:Tween = new Tween(target, s, easing, target[s], props[s], duration / 100, true);			_eventUnit.addEventUnit(tween, TweenEvent.MOTION_FINISH);			_tweens.push(tween);		}				var l:Number = _tweens.length;		for (var i:Number = 0; i < l; i++) _tweens[i].start();	}			private function completeHandler(e:Event):Void	{		EventUnit(e.target).removeAllListeners();				_executeComplete();	}}