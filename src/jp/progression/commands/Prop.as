import jp.progression.commands.proto.Command;/** *  * Progression for ActionScript 2.0 *  * @author	Copyright (c) 2007 Mk-10:cellfusion.jp, supported by Spark project. * @version	1.0.0 Alpha *  * @see		http://progression.jp/ * @see		http://usage.progression.jp/ * @see		http://progression.libspark.org/ *  * @see		http://cellfusion.jp/ * @see		http://www.libspark.org/ *  * Licensed under the Apache License, Version 2.0 (the "License"); * you may not use this file except in compliance with the License. * You may obtain a copy of the License at *  * http://www.apache.org/licenses/LICENSE-2.0 *  * Unless required by applicable law or agreed to in writing, software * distributed under the License is distributed on an "AS IS" BASIS, * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, * either express or implied. See the License for the specific language * governing permissions and limitations under the License. *  */class jp.progression.commands.Prop extends Command {		public function get enabled():Boolean { return (target instanceof Object && props instanceof Object) ? super.enabled : false; }		public function get target():Object { return _target; }	public function set target(value:Object) { _target = value; }	private var _target:Object;		public function get props():Object { return _target; }	public function set props(value:Object) { _target = value; }	private var _props:Object;		public function Prop(name:String, delay:Number) {		super("Prop", delay != undefined ? delay : 0);				_target = target;		_props = props;	}		public function _executeProgress():Void	{		// プロパティを設定する				// 処理を終了する		_executeComplete();	}		public function clone():Command	{		var com:Command = new Prop(target, props, delay);		com.enabled = enabled;		com.before(_beforeScope, _beforeFunc, _beforeArgs);		com.after(_afterScope, _afterFunc, _afterArgs);		return com;	}		public function toString():String	{		return "[object Prop]";	}}