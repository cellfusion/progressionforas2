import jp.progression.commands.proto.Command;import jp.progression.events.CommandEvent;import jp.progression.events.Event;/** *  * Progression for ActionScript 2.0 *  * @author	Copyright (c) 2007 Mk-10:cellfusion.jp, supported by Spark project. * @version	1.0.0 Alpha *  * @see		http://progression.jp/ * @see		http://usage.progression.jp/ * @see		http://progression.libspark.org/ *  * @see		http://cellfusion.jp/ * @see		http://www.libspark.org/ *  * Licensed under the Apache License, Version 2.0 (the "License"); * you may not use this file except in compliance with the License. * You may obtain a copy of the License at *  * http://www.apache.org/licenses/LICENSE-2.0 *  * Unless required by applicable law or agreed to in writing, software * distributed under the License is distributed on an "AS IS" BASIS, * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, * either express or implied. See the License for the specific language * governing permissions and limitations under the License. *  */class jp.progression.events.CommandCatchEvent extends CommandEvent {		static public var EVENT:String = "onEvent";	static public var EXCEPTION:String = "onException";	static public var ERROR:String = "onError";		public function get command():Command { return _command; }	private var _command:Command;		public function get related():Object { return _related; }	private var _related:Object;		public function CommandCatchEvent(type:String, command:Command, related:Object)	{		super(type);				_command = (command == undefined) ? null : command;		_related = (related == undefined) ? null : related;	}		public function clone():Event	{		return new CommandCatchEvent(type, command.clone(), related);	}}