import flash.geom.Point;
/** *  * Progression for ActionScript 2.0 *  * @author	Copyright (c) 2007 Mk-10:cellfusion.jp, supported by Spark project. * @version	1.0.0 Alpha *  * @see		http://progression.jp/ * @see		http://usage.progression.jp/ * @see		http://progression.libspark.org/ *  * @see		http://cellfusion.jp/ * @see		http://www.libspark.org/ *  * Licensed under the Apache License, Version 2.0 (the "License"); * you may not use this file except in compliance with the License. * You may obtain a copy of the License at *  * http://www.apache.org/licenses/LICENSE-2.0 *  * Unless required by applicable law or agreed to in writing, software * distributed under the License is distributed on an "AS IS" BASIS, * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, * either express or implied. See the License for the specific language * governing permissions and limitations under the License. *  */class jp.progression.utils.MathUtil {
	public static function cycle(number:Number, cycle:Number):Number	{		return (number % cycle + cycle) % cycle;	}
	public static function range(number:Number, min:Number, max:Number):Number	{		// min の方が max よりも大きい場合に入れ替える		if (min > max) {			var temp:Number = min;			min = max;			max = temp;		}				return Math.max(min, Math.min(number, max));	}
	public static function percent(numerator:Number, denominator:Number):Number	{		if (denominator == 0) return 0;		return numerator / denominator * 100;	}
	public static function getTable(rows:Number, cols:Number):Array	{		var table:Array = new Array();		for (var i:Number = 0;i < rows; i++) {			for (var j:Number = 0;j < cols; j++) {				table.push(new Point(j, i));			}		}		return table;	}
	public static function getCoin():Number	{		return (Math.random() < 0.5) ? 1 : -1;	}}