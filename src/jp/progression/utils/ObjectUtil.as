/** *  * Progression for ActionScript 2.0 *  * @author	Copyright (c) 2007 Mk-10:cellfusion.jp, supported by Spark project. * @version	1.0.0 Alpha *  * @see		http://progression.jp/ * @see		http://usage.progression.jp/ * @see		http://progression.libspark.org/ *  * @see		http://cellfusion.jp/ * @see		http://www.libspark.org/ *  * Licensed under the Apache License, Version 2.0 (the "License"); * you may not use this file except in compliance with the License. * You may obtain a copy of the License at *  * http://www.apache.org/licenses/LICENSE-2.0 *  * Unless required by applicable law or agreed to in writing, software * distributed under the License is distributed on an "AS IS" BASIS, * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, * either express or implied. See the License for the specific language * governing permissions and limitations under the License. *  */import mx.data.binding.ObjectDumper;class jp.progression.utils.ObjectUtil 
{	static public function setProperties(target:Object, props:Object):Void	{		// 対象を格納する配列を作る		var targets:Array = [target];				// 対象が配列であれば結合する		if (target instanceof Array) {			targets = targets.slice();		}				// プロパティを設定する		var l:Number = targets.length;		for (var i:Number = 0;i < l; i++) {			for (var prop:String in props) {				if (targets[i][prop] == null) {					continue;				}								// 設定値を取得する				var item:Object = targets[i];				var value:Object = props[prop];								// プロパティを設定する				switch (true) {					case value instanceof Array:					case value instanceof Boolean:					case value instanceof Number:					case value instanceof String:					case value instanceof Function:					case value.__proto__ != Object.prototype:						item[prop] = value;						break;					default:						// MovieClip の初期化のタイミングに合わせる						if (item[prop] instanceof MovieClip) {							item[prop].value = value;							item[prop].onLoad= function():Void { ObjectUtil.setProperties(this, this.value); };						} else {							ObjectUtil.setProperties(item[prop], value);						}						break;				}			}		}	}		public static function dump(obj:Object):Void	{		trace(ObjectDumper.toString(obj));	}}